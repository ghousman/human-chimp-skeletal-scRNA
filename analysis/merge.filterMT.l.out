
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #Load libraries
> library(Seurat)
> library(dplyr)

Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union

> library(stringi)
> library(stringr)
> library(ggplot2)
> library(colorspace)
> library(RColorBrewer)
> 
> #Define main directory
> dir <- '/project2/gilad/ghousman/skeletal-human-chimp/'
> 
> #Load batch info
> batch <- read.csv(file=paste0(dir,'human-chimp-skeletal-scRNA/data/scrna-batch.csv'), header=TRUE, sep=",")
> 
> #Read in files
> data <- readRDS(paste0(dir,"/human-chimp-skeletal-scRNA/data/cellranger-data-full/data.filterMT.rds"))
> 
> #Separate human and chimp data within each collection into separate objects
> objects <- list()
> idx <- 1
> for (i in 1:length(batch$Sample_Name_at_Core))
+ {
+   obj <- subset(data[[i]], species=='Human')
+   objects[[idx]] <- CreateSeuratObject(obj@assays$RNA@counts, meta.data=obj@meta.data)
+   idx <- idx+1
+   obj <- subset(data[[i]], species=='Chimp')
+   objects[[idx]] <- CreateSeuratObject(obj@assays$RNA@counts, meta.data=obj@meta.data)
+   idx <- idx+1
+ }
> rm(data,obj)
> 
> #Merge datasets
> #Perform log normalization
> #Reduce dimensionality
> #Remove excess files
> #Save merged datasets
> 
> #combine ipscs from all samples
> combo.ipsc    <- merge(objects[[1]], y=c(objects[[7]],objects[[13]],objects[[19]],objects[[25]],objects[[31]],
+                                          objects[[37]],objects[[2]],objects[[8]],objects[[14]],objects[[20]],
+                                          objects[[26]],objects[[32]],objects[[38]]),
+                        add.cell.ids=c("H1.I","H1r2.I","H2.I","H3.I","H4.I","H5.I","H6.I",
+ 				      "C1.I","C1r2.I","C2.I","C3.I","C4.I","C5.I","C6.I"))
> combo.ipsc <- NormalizeData(combo.ipsc, verbose=FALSE)
> combo.ipsc <- FindVariableFeatures(combo.ipsc, selection.method="vst", nfeatures=3000, verbose=FALSE)
> combo.ipsc <- ScaleData(combo.ipsc, verbose=FALSE)
> combo.ipsc <- RunPCA(object=combo.ipsc, npcs=100, verbose=FALSE)
> pva <- combo.ipsc@reductions$pca@stdev^2/combo.ipsc@reductions$pca@misc$total.variance
> ndim <- length(which(pva>=0.001)) #keep all dims that explaim more than 0.1% of variance
> ndim
[1] 30
> combo.ipsc <- RunUMAP(combo.ipsc, dims=1:ndim)
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
17:13:53 UMAP embedding parameters a = 0.9922 b = 1.112
17:13:53 Read 31557 rows and found 30 numeric columns
17:13:53 Using Annoy for neighbor search, n_neighbors = 30
17:13:53 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
17:13:58 Writing NN index file to temp file /tmp/jobs/779822/Rtmp36hsG2/file311469d49a8
17:13:58 Searching Annoy index using 1 thread, search_k = 3000
17:14:09 Annoy recall = 100%
17:14:09 Commencing smooth kNN distance calibration using 1 thread
17:14:11 Initializing from normalized Laplacian + noise
17:14:13 Commencing optimization for 200 epochs, with 1363830 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
17:14:52 Optimization finished
> saveRDS(combo.ipsc, file=paste0(dir,"/human-chimp-skeletal-scRNA/data/cellranger-data-full/data.filterMT.merge.l.ipsc.rds"))
> rm(combo.ipsc)
> 
> #combine mscs from all samples
> combo.msc    <- merge(objects[[3]], y=c(objects[[9]],objects[[15]],objects[[21]],objects[[27]],objects[[33]],
+                                         objects[[39]],objects[[4]],objects[[10]],objects[[16]],objects[[22]],
+                                         objects[[28]],objects[[34]],objects[[40]]),
+                        add.cell.ids=c("H1.M","H1r2.M","H2.M","H3.M","H4.M","H5.M","H6.M",
+ 				      "C1.M","C1r2.M","C2.M","C3.M","C4.M","C5.M","C6.M"))
> combo.msc <- NormalizeData(combo.msc, verbose=FALSE)
> combo.msc <- FindVariableFeatures(combo.msc, selection.method="vst", nfeatures=3000, verbose=FALSE)
> combo.msc <- ScaleData(combo.msc, verbose=FALSE)
> combo.msc <- RunPCA(object=combo.msc, npcs=100, verbose=FALSE)
> pva <- combo.msc@reductions$pca@stdev^2/combo.msc@reductions$pca@misc$total.variance
> ndim <- length(which(pva>=0.001)) #keep all dims that explaim more than 0.1% of variance
> ndim
[1] 44
> combo.msc <- RunUMAP(combo.msc, dims=1:ndim)
17:19:41 UMAP embedding parameters a = 0.9922 b = 1.112
17:19:41 Read 36738 rows and found 44 numeric columns
17:19:41 Using Annoy for neighbor search, n_neighbors = 30
17:19:41 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
17:19:48 Writing NN index file to temp file /tmp/jobs/779822/Rtmp36hsG2/file311459245401
17:19:48 Searching Annoy index using 1 thread, search_k = 3000
17:20:00 Annoy recall = 100%
17:20:00 Commencing smooth kNN distance calibration using 1 thread
17:20:02 Initializing from normalized Laplacian + noise
17:20:07 Commencing optimization for 200 epochs, with 1563462 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
17:20:53 Optimization finished
> saveRDS(combo.msc, file=paste0(dir,"/human-chimp-skeletal-scRNA/data/cellranger-data-full/data.filterMT.merge.l.msc.rds"))
> rm(combo.msc)
> 
> #combine osteoblasts from all samples
> combo.osteo    <- merge(objects[[5]], y=c(objects[[11]],objects[[17]],objects[[23]],objects[[29]],objects[[35]],
+                                           objects[[41]],objects[[6]],objects[[12]],objects[[18]],objects[[24]],
+                                           objects[[30]],objects[[36]],objects[[42]]),
+                        add.cell.ids=c("H1.O","H1r2.O","H2.O","H3.O","H4.O","H5.O","H6.O",
+ 			              "C1.O","C1r2.O","C2.O","C3.O","C4.O","C5.O","C6.O"))
> combo.osteo <- NormalizeData(combo.osteo, verbose=FALSE)
> combo.osteo <- FindVariableFeatures(combo.osteo, selection.method="vst", nfeatures=3000, verbose=FALSE)
> combo.osteo <- ScaleData(combo.osteo, verbose=FALSE)
> combo.osteo <- RunPCA(object=combo.osteo, npcs=100, verbose=FALSE)
> pva <- combo.osteo@reductions$pca@stdev^2/combo.osteo@reductions$pca@misc$total.variance
> ndim <- length(which(pva>=0.001)) #keep all dims that explaim more than 0.1% of variance
> ndim
[1] 47
> combo.osteo <- RunUMAP(combo.osteo, dims=1:ndim)
17:25:01 UMAP embedding parameters a = 0.9922 b = 1.112
17:25:01 Read 20746 rows and found 47 numeric columns
17:25:01 Using Annoy for neighbor search, n_neighbors = 30
17:25:01 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
17:25:05 Writing NN index file to temp file /tmp/jobs/779822/Rtmp36hsG2/file31147e837778
17:25:05 Searching Annoy index using 1 thread, search_k = 3000
17:25:11 Annoy recall = 100%
17:25:12 Commencing smooth kNN distance calibration using 1 thread
17:25:13 Initializing from normalized Laplacian + noise
17:25:14 Commencing optimization for 200 epochs, with 875006 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
17:25:36 Optimization finished
> saveRDS(combo.osteo, file=paste0(dir,"/human-chimp-skeletal-scRNA/data/cellranger-data-full/data.filterMT.merge.l.osteo.rds"))
> rm(combo.osteoblasts)
Warning message:
In rm(combo.osteoblasts) : object 'combo.osteoblasts' not found
> 
> #combine all collections
> combo.total  <- merge(objects[[1]], y=c(objects[[3]],objects[[5]],
+ 		                        objects[[7]],objects[[9]],objects[[11]],
+ 		                        objects[[13]],objects[[15]],objects[[17]],
+ 		                        objects[[19]],objects[[21]],objects[[23]],
+ 		                        objects[[25]],objects[[27]],objects[[29]],
+ 		                        objects[[31]],objects[[33]],objects[[35]],
+ 		                        objects[[37]],objects[[39]],objects[[41]],
+ 		                        objects[[2]],objects[[4]],objects[[6]],
+ 		                        objects[[8]],objects[[10]],objects[[12]],
+ 		                        objects[[14]],objects[[16]],objects[[18]],
+ 		                        objects[[20]],objects[[22]],objects[[24]],
+ 		                        objects[[26]],objects[[28]],objects[[30]],
+ 			    	        objects[[32]],objects[[34]],objects[[36]],
+ 				        objects[[38]],objects[[40]],objects[[42]]),
+                       add.cell.ids=c("H1.I","H1.M","H1.O","H1r2.I","H1r2.M","H1r2.O","H2.I","H2.M","H2.O",
+ 				     "H3.I","H3.M","H3.O","H4.I","H4.M","H4.O","H5.I","H5.M","H5.O","H6.I","H6.M","H6.O",
+ 				     "C1.I","C1.M","C1.O","C1r2.I","C1r2.M","C1r2.O","C2.I","C2.M","C2.O",
+ 				     "C3.I","C3.M","C3.O","C4.I","C4.M","C4.O","C5.I","C5.M","C5.O","C6.I","C6.M","C6.O"))
> combo.total <- NormalizeData(combo.total, verbose=FALSE)
> combo.total <- FindVariableFeatures(combo.total, selection.method="vst", nfeatures=3000, verbose=FALSE)
> combo.total <- ScaleData(combo.total, verbose=FALSE)
> combo.total <- RunPCA(object=combo.total, npcs=100, verbose=FALSE)
> pva <- combo.total@reductions$pca@stdev^2/combo.total@reductions$pca@misc$total.variance
> ndim <- length(which(pva>=0.001)) #keep all dims that explaim more than 0.1% of variance
> ndim
[1] 50
> combo.total <- RunUMAP(combo.total, dims=1:ndim)
17:35:10 UMAP embedding parameters a = 0.9922 b = 1.112
17:35:10 Read 89041 rows and found 50 numeric columns
17:35:10 Using Annoy for neighbor search, n_neighbors = 30
17:35:10 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
17:35:28 Writing NN index file to temp file /tmp/jobs/779822/Rtmp36hsG2/file31147d9b698a
17:35:28 Searching Annoy index using 1 thread, search_k = 3000
17:36:00 Annoy recall = 100%
17:36:01 Commencing smooth kNN distance calibration using 1 thread
17:36:05 Initializing from normalized Laplacian + noise
17:36:27 Commencing optimization for 200 epochs, with 3911024 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
17:38:21 Optimization finished
> saveRDS(combo.total, file=paste0(dir,"/human-chimp-skeletal-scRNA/data/cellranger-data-full/data.filterMT.merge.l.rds"))
> rm(combo.total)
> 
> proc.time()
    user   system  elapsed 
1849.413  298.097 2168.102 
