
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #Load libraries
> library(Seurat)
> library(dplyr)

Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union

> library(stringi)
> library(stringr)
> library(ggplot2)
> library(colorspace)
> library(RColorBrewer)
> 
> #Define main directory
> dir <- '/project2/gilad/ghousman/skeletal-human-chimp/'
> 
> #Load batch info
> batch <- read.csv(file=paste0(dir,'human-chimp-skeletal-scRNA/data/scrna-batch.csv'), header=TRUE, sep=",")
> 
> #Load objects
> objects <- readRDS(paste0(dir,"/human-chimp-skeletal-scRNA/data/cellranger-data-full/data.indv-cell.log.rds"))
> 
> #Define list subset
> #Select features for downstream integration (keeping at 1000 for now)
> #Identify anchors (used references + RPCA reduction method) #ALL OTHER METHODS CRASH
> #Integrate datasets
> #Reduce dimensionality
> #Save data
> 
> #combine ipscs from all samples
> obj.ipsc  <- list(objects[[1]],objects[[2]],objects[[7]],objects[[8]],objects[[13]],objects[[14]],objects[[19]],objects[[20]],
+                   objects[[25]],objects[[26]],objects[[31]],objects[[32]],objects[[37]],objects[[38]])
> obj.ipsc.features <- SelectIntegrationFeatures(object.list=obj.ipsc, nfeatures=6000)
> reference_dataset <- c(3:4) #H1C1-r2 differentiated the best
> obj.ipsc <- lapply(X=obj.ipsc, FUN=function(x) {
+     x <- ScaleData(x, features=obj.ipsc.features, verbose=FALSE)
+     x <- RunPCA(x, features=obj.ipsc.features, verbose=FALSE)
+ })
> obj.ipsc.anchors <- FindIntegrationAnchors(object.list=obj.ipsc, normalization.method="LogNormalize", anchor.features=obj.ipsc.features,
+                                            reference=reference_dataset, reduction="rpca")
Scaling features for provided objects
Computing within dataset neighborhoods
Finding anchors between all query and reference datasets
Finding neighborhoods
Finding anchors
	Found 841 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 440 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 448 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 473 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 540 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 601 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 451 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 342 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 318 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 632 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 413 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 477 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 421 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 554 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 354 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 520 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 443 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 590 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 392 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 425 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 505 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 615 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 390 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 496 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 517 anchors
Extracting within-dataset neighbors
Warning message:
In CheckDuplicateCellNames(object.list = object.list) :
  Some cell names are duplicated across objects provided. Renaming to enforce unique cell names.
> int.ipsc <- IntegrateData(anchorset=obj.ipsc.anchors, normalization.method="LogNormalize")
Building integrated reference
Merging dataset 4 into 3
Extracting anchors for merged samples
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Warning: Adding a command log without an assay associated with it
Integrating dataset 1 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 2 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 5 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 6 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 7 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 8 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 9 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 10 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 11 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 12 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 13 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 14 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Warning: Adding a command log without an assay associated with it
> int.ipsc <- ScaleData(int.ipsc, verbose=FALSE)
> int.ipsc <- RunPCA(object=int.ipsc, npcs=100, verbose=FALSE)
> pva <- int.ipsc@reductions$pca@stdev^2/int.ipsc@reductions$pca@misc$total.variance
> ndim <- length(which(pva>=0.001)) #keep all dims that explaim more than 0.1% of variance
> print(ndim)
[1] 13
> int.ipsc <- RunUMAP(int.ipsc, dims=1:100)
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
17:42:25 UMAP embedding parameters a = 0.9922 b = 1.112
17:42:25 Read 37509 rows and found 100 numeric columns
17:42:25 Using Annoy for neighbor search, n_neighbors = 30
17:42:25 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
17:42:34 Writing NN index file to temp file /tmp/jobs/66296284/RtmpLriwfH/file42b32a748f99
17:42:34 Searching Annoy index using 1 thread, search_k = 3000
17:42:53 Annoy recall = 100%
17:42:54 Commencing smooth kNN distance calibration using 1 thread
17:42:56 Initializing from normalized Laplacian + noise
17:42:57 Commencing optimization for 200 epochs, with 1738774 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
17:43:46 Optimization finished
> saveRDS(int.ipsc, file=paste0(dir,"/human-chimp-skeletal-scRNA/data/cellranger-data-full/data.indv-cell.log.6k.int.ipsc.rds"))
> rm(obj.ipsc,int.ipsc)
> 
> #combine mscs from all samples
> obj.msc   <- list(objects[[3]],objects[[4]],objects[[9]],objects[[10]],objects[[15]],objects[[16]],objects[[21]],objects[[22]],
+                   objects[[27]],objects[[28]],objects[[33]],objects[[34]],objects[[39]],objects[[40]])
> obj.msc.features <- SelectIntegrationFeatures(object.list=obj.msc, nfeatures=6000)
> reference_dataset <- c(3:4) #H1C1-r2 differentiated the best
> obj.msc <- lapply(X=obj.msc, FUN=function(x) {
+     x <- ScaleData(x, features=obj.msc.features, verbose=FALSE)
+     x <- RunPCA(x, features=obj.msc.features, verbose=FALSE)
+ })
> obj.msc.anchors <- FindIntegrationAnchors(object.list=obj.msc, normalization.method="LogNormalize", anchor.features=obj.msc.features,
+                                            reference=reference_dataset, reduction="rpca")
Scaling features for provided objects
Computing within dataset neighborhoods
Finding anchors between all query and reference datasets
Finding neighborhoods
Finding anchors
	Found 1334 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 1045 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 504 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 678 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 694 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 1501 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 683 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 731 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 1419 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 1196 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 442 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 910 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 864 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 1105 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 508 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 776 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 1516 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 1059 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 841 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 776 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 1348 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 1356 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 533 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 770 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 739 anchors
Extracting within-dataset neighbors
Warning message:
In CheckDuplicateCellNames(object.list = object.list) :
  Some cell names are duplicated across objects provided. Renaming to enforce unique cell names.
> int.msc <- IntegrateData(anchorset=obj.msc.anchors, normalization.method="LogNormalize")
Building integrated reference
Merging dataset 4 into 3
Extracting anchors for merged samples
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Warning: Adding a command log without an assay associated with it
Integrating dataset 1 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 2 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 5 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 6 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 7 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 8 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 9 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 10 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 11 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 12 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 13 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 14 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Warning: Adding a command log without an assay associated with it
> int.msc <- ScaleData(int.msc, verbose=FALSE)
> int.msc <- RunPCA(object=int.msc, npcs=100, verbose=FALSE)
> pva <- int.msc@reductions$pca@stdev^2/int.msc@reductions$pca@misc$total.variance
> ndim <- length(which(pva>=0.001)) #keep all dims that explaim more than 0.1% of variance
> print(ndim)
[1] 17
> int.msc <- RunUMAP(int.msc, dims=1:100)
18:06:28 UMAP embedding parameters a = 0.9922 b = 1.112
18:06:28 Read 38594 rows and found 100 numeric columns
18:06:28 Using Annoy for neighbor search, n_neighbors = 30
18:06:28 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:06:37 Writing NN index file to temp file /tmp/jobs/66296284/RtmpLriwfH/file42b326fa47a9
18:06:37 Searching Annoy index using 1 thread, search_k = 3000
18:06:56 Annoy recall = 100%
18:06:57 Commencing smooth kNN distance calibration using 1 thread
18:06:59 Initializing from normalized Laplacian + noise
18:07:01 Commencing optimization for 200 epochs, with 1825320 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:07:50 Optimization finished
> saveRDS(int.msc, file=paste0(dir,"/human-chimp-skeletal-scRNA/data/cellranger-data-full/data.indv-cell.log.6k.int.msc.rds"))
> rm(obj.msc,int.msc)
> 
> #combine osteoblasts from all samples
> obj.osteo <- list(objects[[5]],objects[[6]],objects[[11]],objects[[12]],objects[[17]],objects[[18]],objects[[23]],objects[[24]],
+                   objects[[29]],objects[[30]],objects[[35]],objects[[36]],objects[[41]],objects[[42]])
> obj.osteo.features <- SelectIntegrationFeatures(object.list=obj.osteo, nfeatures=6000)
> reference_dataset <- c(3:4) #H1C1-r2 differentiated the best
> obj.osteo <- lapply(X=obj.osteo, FUN=function(x) {
+     x <- ScaleData(x, features=obj.osteo.features, verbose=FALSE)
+     x <- RunPCA(x, features=obj.osteo.features, verbose=FALSE)
+ })
> obj.osteo.anchors <- FindIntegrationAnchors(object.list=obj.osteo, normalization.method="LogNormalize", anchor.features=obj.osteo.features,
+                                            reference=reference_dataset, reduction="rpca")
Scaling features for provided objects
Computing within dataset neighborhoods
Finding anchors between all query and reference datasets
Finding neighborhoods
Finding anchors
	Found 1443 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 733 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 403 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 372 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 390 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 833 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 350 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 476 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 563 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 480 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 259 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 426 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 309 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 898 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 345 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 430 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 779 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 734 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 440 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 417 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 789 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 855 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 389 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 511 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 389 anchors
Extracting within-dataset neighbors
Warning message:
In CheckDuplicateCellNames(object.list = object.list) :
  Some cell names are duplicated across objects provided. Renaming to enforce unique cell names.
> int.osteo <- IntegrateData(anchorset=obj.osteo.anchors, normalization.method="LogNormalize")
Building integrated reference
Merging dataset 4 into 3
Extracting anchors for merged samples
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Warning: Adding a command log without an assay associated with it
Integrating dataset 1 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 2 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 5 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 6 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 7 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 8 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 9 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 10 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 11 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 12 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 13 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 14 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Warning: Adding a command log without an assay associated with it
> int.osteo <- ScaleData(int.osteo, verbose=FALSE)
> int.osteo <- RunPCA(object=int.osteo, npcs=100, verbose=FALSE)
> pva <- int.osteo@reductions$pca@stdev^2/int.osteo@reductions$pca@misc$total.variance
> ndim <- length(which(pva>=0.001)) #keep all dims that explaim more than 0.1% of variance
> print(ndim)
[1] 18
> int.osteo <- RunUMAP(int.osteo, dims=1:100)
18:22:33 UMAP embedding parameters a = 0.9922 b = 1.112
18:22:33 Read 26077 rows and found 100 numeric columns
18:22:33 Using Annoy for neighbor search, n_neighbors = 30
18:22:33 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:22:40 Writing NN index file to temp file /tmp/jobs/66296284/RtmpLriwfH/file42b342d4b19e
18:22:40 Searching Annoy index using 1 thread, search_k = 3000
18:22:52 Annoy recall = 100%
18:22:53 Commencing smooth kNN distance calibration using 1 thread
18:22:54 Initializing from normalized Laplacian + noise
18:22:55 Commencing optimization for 200 epochs, with 1209398 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
18:23:27 Optimization finished
> saveRDS(int.osteo, file=paste0(dir,"/human-chimp-skeletal-scRNA/data/cellranger-data-full/data.indv-cell.log.6k.int.osteo.rds"))
> rm(obj.osteo,int.osteo)
> 
> 
> proc.time()
    user   system  elapsed 
3250.538  478.017 3740.548 
