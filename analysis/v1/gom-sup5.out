
R version 3.4.3 (2017-11-30) -- "Kite-Eating Tree"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #Load libraries
> library(Seurat)
> library(dplyr)

Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union

> library(stringi)
> library(stringr)
> library(ggplot2)
> library(grid)
> library(gbm)
Loaded gbm 2.1.5
> library(colorspace)
> library(RColorBrewer)
> library(tidyr)
> library(UpSetR)
> library(reshape2)

Attaching package: 'reshape2'

The following object is masked from 'package:tidyr':

    smiths

> library(CountClust)
> library(classtpx)
Loading required package: slam
> 
> #Define main directory
> dir <- '/project2/gilad/ghousman/skeletal-human-chimp/'
> 
> #Load data
> indv <- readRDS(paste0(dir,"/human-chimp-skeletal-scRNA/data/cellranger-data-full/data.indv.log.10k.int.rds")) #integrate across individuals - total
> 
> #Load cell atlas data matrix (currated by GAH)
> hpca <- read.table("/project2/gilad/ghousman/skeletal-human-chimp/human-chimp-skeletal-scRNA/data/HumanPrimaryCellAtlasData-SingleR")
> hpca.names <- read.csv("/project2/gilad/ghousman/skeletal-human-chimp/human-chimp-skeletal-scRNA/data/HumanPrimaryCellAtlasLabels-SingleR.csv", row.names=1)
> hpca.names$label <- paste0(hpca.names$label.curated,"_",hpca.names$geo.curated)
> i=1
> while(i <= length(colnames(hpca))) {
+   colnames(hpca)[i] <- hpca.names$label[rownames(hpca.names)==colnames(hpca)[i]]
+   i=i+1
+ }
> 
> #Subset cell atlas data matrix only iPSCs, MSCs, Osteoblasts, Chondrocytes, and Adipocytes
> hpca.sub <- hpca[,unique(c(grep("iPSC", colnames(hpca)),grep("MSC", colnames(hpca)),grep("Osteoblast", colnames(hpca)),
+                            grep("Chondrocyte", colnames(hpca)),grep("Adipocyte", colnames(hpca))))]
> 
> #Merge with cell atlas data (integrated data and renormalizing data like ComputeCorMat() does not work)
> gene.id <- rownames(indv@assays$RNA@counts)
> gene.ref <- rownames(hpca.sub)
> common <- intersect(gene.id, gene.ref)
> merged.data <- merge(GetAssayData(indv, slot="data", assay="RNA")[common,], hpca.sub[common,], by="row.names")
> #merged.data <- merge(GetAssayData(indv, slot="data", assay="RNA")[common,which(indv@meta.data$Sample=="H1-I")], hpca.sub[common,], by="row.names")
> rownames(merged.data) <- merged.data$Row.names
> merged.data <- merged.data[,c(2:length(colnames(merged.data)))]
> labels <- sapply(strsplit(colnames(merged.data),"_"), `[`, 1)
> 
> #Semi-supervised topic modeling (define some known clusters prior to fitting topic model)
> 
> #labels for "known" clusters
> idx.ips <- which(labels=="iPSC")
> idx.msc <- which(labels=="MSC")
> idx.ost <- which(labels=="Osteoblast" | labels=="MSC-Osteoblast.D1" | labels=="MSC-Osteoblast.D3" | labels=="MSC-Osteoblast.D7" | labels=="MSC-Osteoblast")
> idx.cho <- which(labels=="Chondrocytes" | labels=="MSC-Chondrocyte")
> idx.adi <- which(labels=="MSC-Adipocyte")
> kwn.smp <- c(idx.ips,idx.msc,idx.ost,idx.cho,idx.adi)
> 
> class.labs <- c(rep("iPSC", length(idx.ips)),
+                 rep("MSC", length(idx.msc)),
+                 rep("Osteoblast", length(idx.ost)),
+                 rep("Chondrocyte", length(idx.cho)),
+                 rep("Adipocyte", length(idx.adi)))
> 
> #Perform topic modeling k=5:6 (maybe change tol=0.1 at some point)
> #Save GoM data
> for(k in c(5:6)) {
+   print(k)
+   tpx.clust <- classtpx::class_topics(
+     t(merged.data),
+     K=k,
+     known_samples=kwn.smp,
+     class_labs=class.labs,
+     method="omega.fix",
+     tol=1)
+   save(tpx.clust, file=paste0(dir,"human-chimp-skeletal-scRNA/data/cellranger-data-full/gom.sup.",k,".indv.log.10k.int.rds"))
+   print(paste0("Finished k = ",k))
+ }
[1] 5

Estimating on a 102300 document collection.
start the fit 
log posterior increase: 3397673, 18161.2, 1852.5, 173.2, done.
[1] "Finished k = 5"
[1] 6

Estimating on a 102300 document collection.
start the fit 
log posterior increase: 4410665.2, 116800.9, 23900.5, 9171.6, 4194, 2087, 1102.9, 617.2, 362.9, 227.1, 151.7, 106.7, 78.2, 