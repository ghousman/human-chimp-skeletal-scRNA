
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #Load libraries
> library(Seurat)
> library(dplyr)

Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union

> library(stringi)
> library(stringr)
> library(ggplot2)
> library(colorspace)
> library(RColorBrewer)
> 
> #Define main directory
> dir <- '/project2/gilad/ghousman/skeletal-human-chimp/'
> 
> #Load batch info
> batch <- read.csv(file=paste0(dir,'human-chimp-skeletal-scRNA/data/scrna-batch.csv'), header=TRUE, sep=",")
> 
> #Load objects
> objects <- readRDS(paste0(dir,"/human-chimp-skeletal-scRNA/data/cellranger-data-full/data.indv-cell.log.rds"))
> 
> #Define list subset
> #Select features for downstream integration (keeping at 1000 for now)
> #Identify anchors (used references + RPCA reduction method) #ALL OTHER METHODS CRASH
> #Integrate datasets
> #Reduce dimensionality
> #Save data
> 
> #combine ipscs from all samples
> obj.ipsc  <- list(objects[[1]],objects[[2]],objects[[7]],objects[[8]],objects[[13]],objects[[14]],objects[[19]],objects[[20]],
+                   objects[[25]],objects[[26]],objects[[31]],objects[[32]],objects[[37]],objects[[38]])
> obj.ipsc.features <- SelectIntegrationFeatures(object.list=obj.ipsc, nfeatures=3000)
> reference_dataset <- c(3:4) #H1C1-r2 differentiated the best
> obj.ipsc <- lapply(X=obj.ipsc, FUN=function(x) {
+     x <- ScaleData(x, features=obj.ipsc.features, verbose=FALSE)
+     x <- RunPCA(x, features=obj.ipsc.features, verbose=FALSE)
+ })
> obj.ipsc.anchors <- FindIntegrationAnchors(object.list=obj.ipsc, normalization.method="LogNormalize", anchor.features=obj.ipsc.features,
+                                            reference=reference_dataset, reduction="rpca")
Scaling features for provided objects
Computing within dataset neighborhoods
Finding anchors between all query and reference datasets
Finding neighborhoods
Finding anchors
	Found 777 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 388 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 425 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 450 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 527 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 544 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 416 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 339 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 302 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 628 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 352 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 493 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 410 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 496 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 328 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 469 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 441 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 562 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 358 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 413 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 522 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 659 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 350 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 490 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 451 anchors
Extracting within-dataset neighbors
Warning message:
In CheckDuplicateCellNames(object.list = object.list) :
  Some cell names are duplicated across objects provided. Renaming to enforce unique cell names.
> int.ipsc <- IntegrateData(anchorset=obj.ipsc.anchors, normalization.method="LogNormalize")
Building integrated reference
Merging dataset 4 into 3
Extracting anchors for merged samples
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Warning: Adding a command log without an assay associated with it
Integrating dataset 1 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 2 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 5 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 6 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 7 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 8 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 9 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 10 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 11 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 12 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 13 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 14 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Warning: Adding a command log without an assay associated with it
> int.ipsc <- ScaleData(int.ipsc, verbose=FALSE)
> int.ipsc <- RunPCA(object=int.ipsc, npcs=100, verbose=FALSE)
> pva <- int.ipsc@reductions$pca@stdev^2/int.ipsc@reductions$pca@misc$total.variance
> ndim <- length(which(pva>=0.001)) #keep all dims that explaim more than 0.1% of variance
> print(ndim)
[1] 16
> int.ipsc <- RunUMAP(int.ipsc, dims=1:100)
Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per session
16:00:20 UMAP embedding parameters a = 0.9922 b = 1.112
16:00:20 Read 37509 rows and found 100 numeric columns
16:00:20 Using Annoy for neighbor search, n_neighbors = 30
16:00:20 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
16:00:30 Writing NN index file to temp file /tmp/jobs/66294570/Rtmpg4OSxH/file633f5f3b8de1
16:00:30 Searching Annoy index using 1 thread, search_k = 3000
16:00:50 Annoy recall = 99.86%
16:00:50 Commencing smooth kNN distance calibration using 1 thread
16:00:52 Initializing from normalized Laplacian + noise
16:00:54 Commencing optimization for 200 epochs, with 1796862 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
16:01:43 Optimization finished
> saveRDS(int.ipsc, file=paste0(dir,"/human-chimp-skeletal-scRNA/data/cellranger-data-full/data.indv-cell.log.3k.int.ipsc.rds"))
> rm(obj.ipsc,int.ipsc)
> 
> #combine mscs from all samples
> obj.msc   <- list(objects[[3]],objects[[4]],objects[[9]],objects[[10]],objects[[15]],objects[[16]],objects[[21]],objects[[22]],
+                   objects[[27]],objects[[28]],objects[[33]],objects[[34]],objects[[39]],objects[[40]])
> obj.msc.features <- SelectIntegrationFeatures(object.list=obj.msc, nfeatures=3000)
> reference_dataset <- c(3:4) #H1C1-r2 differentiated the best
> obj.msc <- lapply(X=obj.msc, FUN=function(x) {
+     x <- ScaleData(x, features=obj.msc.features, verbose=FALSE)
+     x <- RunPCA(x, features=obj.msc.features, verbose=FALSE)
+ })
> obj.msc.anchors <- FindIntegrationAnchors(object.list=obj.msc, normalization.method="LogNormalize", anchor.features=obj.msc.features,
+                                            reference=reference_dataset, reduction="rpca")
Scaling features for provided objects
Computing within dataset neighborhoods
Finding anchors between all query and reference datasets
Finding neighborhoods
Finding anchors
	Found 1314 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 1044 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 431 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 622 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 585 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 1362 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 621 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 679 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 1384 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 1082 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 434 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 893 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 796 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 1141 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 492 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 782 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 1391 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 1006 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 760 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 739 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 1328 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 1381 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 511 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 747 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 694 anchors
Extracting within-dataset neighbors
Warning message:
In CheckDuplicateCellNames(object.list = object.list) :
  Some cell names are duplicated across objects provided. Renaming to enforce unique cell names.
> int.msc <- IntegrateData(anchorset=obj.msc.anchors, normalization.method="LogNormalize")
Building integrated reference
Merging dataset 4 into 3
Extracting anchors for merged samples
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Warning: Adding a command log without an assay associated with it
Integrating dataset 1 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 2 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 5 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 6 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 7 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 8 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 9 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 10 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 11 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 12 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 13 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 14 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Warning: Adding a command log without an assay associated with it
> int.msc <- ScaleData(int.msc, verbose=FALSE)
> int.msc <- RunPCA(object=int.msc, npcs=100, verbose=FALSE)
> pva <- int.msc@reductions$pca@stdev^2/int.msc@reductions$pca@misc$total.variance
> ndim <- length(which(pva>=0.001)) #keep all dims that explaim more than 0.1% of variance
> print(ndim)
[1] 29
> int.msc <- RunUMAP(int.msc, dims=1:100)
16:15:12 UMAP embedding parameters a = 0.9922 b = 1.112
16:15:12 Read 38594 rows and found 100 numeric columns
16:15:12 Using Annoy for neighbor search, n_neighbors = 30
16:15:12 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
16:15:21 Writing NN index file to temp file /tmp/jobs/66294570/Rtmpg4OSxH/file633f7e8811cc
16:15:21 Searching Annoy index using 1 thread, search_k = 3000
16:15:41 Annoy recall = 100%
16:15:41 Commencing smooth kNN distance calibration using 1 thread
16:15:43 Initializing from normalized Laplacian + noise
16:15:45 Commencing optimization for 200 epochs, with 1861446 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
16:16:36 Optimization finished
> saveRDS(int.msc, file=paste0(dir,"/human-chimp-skeletal-scRNA/data/cellranger-data-full/data.indv-cell.log.3k.int.msc.rds"))
> rm(obj.msc,int.msc)
> 
> #combine osteoblasts from all samples
> obj.osteo <- list(objects[[5]],objects[[6]],objects[[11]],objects[[12]],objects[[17]],objects[[18]],objects[[23]],objects[[24]],
+                   objects[[29]],objects[[30]],objects[[35]],objects[[36]],objects[[41]],objects[[42]])
> obj.osteo.features <- SelectIntegrationFeatures(object.list=obj.osteo, nfeatures=3000)
> reference_dataset <- c(3:4) #H1C1-r2 differentiated the best
> obj.osteo <- lapply(X=obj.osteo, FUN=function(x) {
+     x <- ScaleData(x, features=obj.osteo.features, verbose=FALSE)
+     x <- RunPCA(x, features=obj.osteo.features, verbose=FALSE)
+ })
> obj.osteo.anchors <- FindIntegrationAnchors(object.list=obj.osteo, normalization.method="LogNormalize", anchor.features=obj.osteo.features,
+                                            reference=reference_dataset, reduction="rpca")
Scaling features for provided objects
Computing within dataset neighborhoods
Finding anchors between all query and reference datasets
Finding neighborhoods
Finding anchors
	Found 1289 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 625 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 345 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 354 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 362 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 802 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 275 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 405 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 525 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 382 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 213 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 370 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 277 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 775 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 247 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 363 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 734 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 641 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 364 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 381 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 726 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 839 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 354 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 506 anchors
Extracting within-dataset neighbors
Finding neighborhoods
Finding anchors
	Found 389 anchors
Extracting within-dataset neighbors
Warning message:
In CheckDuplicateCellNames(object.list = object.list) :
  Some cell names are duplicated across objects provided. Renaming to enforce unique cell names.
> int.osteo <- IntegrateData(anchorset=obj.osteo.anchors, normalization.method="LogNormalize")
Building integrated reference
Merging dataset 4 into 3
Extracting anchors for merged samples
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Warning: Adding a command log without an assay associated with it
Integrating dataset 1 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 2 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 5 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 6 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 7 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 8 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 9 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 10 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 11 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 12 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 13 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Integrating dataset 14 with reference dataset
Finding integration vectors
Finding integration vector weights
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
Integrating data
Warning: Adding a command log without an assay associated with it
> int.osteo <- ScaleData(int.osteo, verbose=FALSE)
> int.osteo <- RunPCA(object=int.osteo, npcs=100, verbose=FALSE)
> pva <- int.osteo@reductions$pca@stdev^2/int.osteo@reductions$pca@misc$total.variance
> ndim <- length(which(pva>=0.001)) #keep all dims that explaim more than 0.1% of variance
> print(ndim)
[1] 27
> int.osteo <- RunUMAP(int.osteo, dims=1:100)
16:25:47 UMAP embedding parameters a = 0.9922 b = 1.112
16:25:47 Read 26077 rows and found 100 numeric columns
16:25:47 Using Annoy for neighbor search, n_neighbors = 30
16:25:47 Building Annoy index with metric = cosine, n_trees = 50
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
16:25:54 Writing NN index file to temp file /tmp/jobs/66294570/Rtmpg4OSxH/file633f7d4d84ae
16:25:54 Searching Annoy index using 1 thread, search_k = 3000
16:26:07 Annoy recall = 100%
16:26:07 Commencing smooth kNN distance calibration using 1 thread
16:26:09 Initializing from normalized Laplacian + noise
16:26:10 Commencing optimization for 200 epochs, with 1241408 positive edges
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
**************************************************|
16:26:42 Optimization finished
> saveRDS(int.osteo, file=paste0(dir,"/human-chimp-skeletal-scRNA/data/cellranger-data-full/data.indv-cell.log.3k.int.osteo.rds"))
> rm(obj.osteo,int.osteo)
> 
> 
> proc.time()
    user   system  elapsed 
2157.335  215.776 2385.730 
