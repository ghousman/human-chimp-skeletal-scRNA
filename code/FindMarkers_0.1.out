
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #Read in command line arguments as list of character vectors
> args=(commandArgs(TRUE))
> 
> #Check if arguments are passed and cycle through to evaluate each element
> if(length(args)==0){
+   print("No arguments supplied.")
+   #supply default values
+   res="0.1"
+ }else{
+   for(i in 1:length(args)){
+     eval(parse(text=args[[i]]))
+   }
+ }
> print(paste0("res: ",res))
[1] "res: 0.1"
> 
> #Load libraries
> library(Seurat)
> library(cvms)
> library(broom)
> library(tibble)
> library(dplyr)

Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union

> library(stringi)
> library(stringr)
> 
> #Load data
> #data integrated across individuals - total (conservative cell filter + non-zero genes + regress out UMI/mito)
> scrna <- "../data/cellranger-data-full/data.filterC.log.indv-cell.intNo0.reg-tot.assign.rds"
> data <- readRDS(scrna)
> data@meta.data$Cell <- rownames(data@meta.data)
> 
> #Get total genes included in topics modeling
> counts <- as.matrix(data@assays$RNA@counts) #do not use integrated data
> counts <- counts[rowSums(counts>0)>0,]          #remove genes with 0 counts across cells
> geneTot <- rownames(counts)
> 
> #Find top 100 markers for every cluster compared to all remaining clusters, report only the positive ones
> if(res=="0.1") {Idents(data) <- data@meta.data$integrated_snn_res.0.1}
> if(res=="0.25") {Idents(data) <- data@meta.data$integrated_snn_res.0.25}
> if(res=="0.5") {Idents(data) <- data@meta.data$integrated_snn_res.0.5}
> if(res=="0.75") {Idents(data) <- data@meta.data$integrated_snn_res.0.75}
> if(res=="1")   {Idents(data) <- data@meta.data$integrated_snn_res.1}
> 
> markers <- FindAllMarkers(data, only.pos=TRUE, min.pct=0.25, logfc.threshold=0.25, features=geneTot)
Calculating cluster 0
Calculating cluster 1
Calculating cluster 2
Calculating cluster 3
Calculating cluster 4
Calculating cluster 5
Calculating cluster 6
Calculating cluster 7
> markers %>% group_by(cluster) %>% top_n(n=100, wt=avg_logFC)
# A tibble: 800 x 7
# Groups:   cluster [8]
   p_val avg_logFC pct.1 pct.2 p_val_adj cluster gene  
   <dbl>     <dbl> <dbl> <dbl>     <dbl> <fct>   <chr> 
 1     0      2.00 1     0.516         0 0       CD24  
 2     0      1.96 1     0.81          0 0       APOE  
 3     0      1.82 0.998 0.674         0 0       POU5F1
 4     0      1.67 0.998 0.697         0 0       L1TD1 
 5     0      1.52 0.993 0.461         0 0       GAL   
 6     0      1.46 0.999 0.886         0 0       TUBB2B
 7     0      1.39 0.999 0.946         0 0       HMGA1 
 8     0      1.38 0.988 0.779         0 0       EPCAM 
 9     0      1.37 0.997 0.845         0 0       SFRP2 
10     0      1.33 0.995 0.793         0 0       TDGF1 
# ... with 790 more rows
> top5 <- markers %>% group_by(cluster) %>% top_n(n=5, wt=avg_logFC)
> saveRDS(markers, file=paste0("../output/markers",res,".data.filterC.log.indv-cell.intNo0.reg-tot.rds"))
> 
> proc.time()
     user    system   elapsed 
10606.529  1709.348 12352.994 
